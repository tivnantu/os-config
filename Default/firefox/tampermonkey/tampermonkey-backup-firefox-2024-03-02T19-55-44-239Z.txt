{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Github 增强 - 高速下载","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":"JavaScript","noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://github.com/*","*://hub.incept.pw/*","*://hub.nuaa.cf/*","*://hub.yzuu.cf/*","*://hub.scholar.rr.nu/*","*://kkgithub.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-end","orig_noframes":null}},"storage":{"ts":1695782723571,"data":{"xiu2_menu_raw_fast":"n1","menu_rawDownLink":"btrue","menu_gitClone":"btrue"}},"enabled":true,"position":1,"file_url":"https://update.greasyfork.org/scripts/412245/Github%20%E5%A2%9E%E5%BC%BA%20-%20%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD.user.js","uuid":"c2372b7c-7849-442b-866d-cbe86048c1b1","source":""},{"name":"哔哩哔哩(B站|Bilibili)收藏夹Fix","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://space.bilibili.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["biliplus.com"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723578,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/383143-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9-b%E7%AB%99-bilibili-%E6%94%B6%E8%97%8F%E5%A4%B9fix/code/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9(B%E7%AB%99%7CBilibili)%E6%94%B6%E8%97%8F%E5%A4%B9Fix.user.js","uuid":"67d7c13f-23e9-42d7-bd2b-dd5c3dfd9c50","source":"","resources":[{"meta":{"name":"error.png","url":"https://cdn.jsdelivr.net/gh/Mr-Po/bilibili-favorites-fix/media/error.png","ts":1695782723572,"mimetype":"image/png"},"source":""},{"meta":{"name":"success.png","url":"https://cdn.jsdelivr.net/gh/Mr-Po/bilibili-favorites-fix/media/success.png","ts":1695782723572,"mimetype":"image/png"},"source":""},{"meta":{"name":"info.png","url":"https://cdn.jsdelivr.net/gh/Mr-Po/bilibili-favorites-fix/media/info.png","ts":1695782723572,"mimetype":"image/png"},"source":"wolQTkcNChoKAAAADUlIRFIAAABQAAAAUAgGAAAAwo4Rw7LCrQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHDiWU8AAADZmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLDr8K7wr8iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOkU5OTZBMTRCMjc3RUU5MTE4NzZDRDdDOTA3RjdCNUEyIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjc3MjZENERBN0UyNzExRTk5Qjk4OEMxNTE2QjQ4Q0E5IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjc3MjZENEQ5N0UyNzExRTk5Qjk4OEMxNTE2QjQ4Q0E5IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzYgKFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RUI5NkExNEIyNzdFRTkxMTg3NkNEN0M5MDdGN0I1QTIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RTk5NkExNEIyNzdFRTkxMTg3NkNEN0M5MDdGN0I1QTIiLz4gPC9yZGY6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"}],"requires":[{"meta":{"name":"jquery.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js","ts":1695782723573,"mimetype":"text/javascript"},"source":""}]},{"name":"直接显示StackOverflow的答题日期","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://stackoverflow.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723581,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/368061-%E7%9B%B4%E6%8E%A5%E6%98%BE%E7%A4%BAstackoverflow%E7%9A%84%E7%AD%94%E9%A2%98%E6%97%A5%E6%9C%9F/code/%E7%9B%B4%E6%8E%A5%E6%98%BE%E7%A4%BAStackOverflow%E7%9A%84%E7%AD%94%E9%A2%98%E6%97%A5%E6%9C%9F.user.js","uuid":"a986622f-4d79-4a37-8aa4-a50c00446aca","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnm7TmjqXmmL7npLpTdGFja092ZXJmbG9355qE562U6aKY5pel5pyfCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4xCi8vIEBkZXNjcmlwdGlvbiAgZGlyZWN0bHkgc2hvdyB0aGUgcG9zdCBkYXRlIG9mIGFuc3dlcnMgYXQgU3RhY2tPdmVyZmxvdy5jb20KLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnCiAgICB2YXIgYmxvY2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnVzZXItYWN0aW9uLXRpbWUnKQogICAgYmxvY2tzLmZvckVhY2goZnVuY3Rpb24oZWxlKSB7CiAgICAgICAgdmFyIHJlbGF0aXZldGltZSA9IGVsZS5xdWVyeVNlbGVjdG9yKCcucmVsYXRpdmV0aW1lJykKICAgICAgICB2YXIgdGltZSA9IG5ldyBEYXRlKHJlbGF0aXZldGltZS50aXRsZSkudG9Mb2NhbGVEYXRlU3RyaW5nKCkKICAgICAgICByZWxhdGl2ZXRpbWUuaW5uZXJUZXh0ID0gdGltZQogICAgfSkKfSkoKQo="},{"name":"CSDN 去广告沉浸阅读模式","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["https://bbs.csdn.net/topics/*","https://*.iteye.com/blog/*","https://*.iteye.com/news/*","https://ask.csdn.net/questions/*"],"merge_includes":true,"use_matches":[],"orig_matches":["*://blog.csdn.net/*/article/details/*","*://*.blog.csdn.net/article/details/*","<$URL$>"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723585,"data":{"$CSDNCleaner_background_ranges":"s{\"categorys\":[],\"imgs\":[],\"customUrl\":\"\",\"bgColor\":\"rgb(250, 246, 246)\",\"defaultHideMenu\":false,\"hideRecommendBox\":false,\"hideCopyright\":false,\"showCatalogue\":false,\"showSourceLink\":true,\"articleWeightRate\":\"\"}"}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/373457-csdn-%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%B2%89%E6%B5%B8%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F/code/CSDN%20%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%B2%89%E6%B5%B8%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F.user.js","uuid":"bbf7f38f-8d66-4ec8-bbe6-86999b02e4e8","source":"","requires":[{"meta":{"name":"acolorpicker.js","url":"https://unpkg.com/a-color-picker@1.2.1/dist/acolorpicker.js","ts":1697801450991,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.min.js","url":"https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js","ts":1697801450993,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"roundslider.min.js","url":"https://cdn.jsdelivr.net/npm/round-slider@1.6.1/dist/roundslider.min.js","ts":1697801450986,"mimetype":"text/javascript"},"source":""}]},{"name":"redirect 外链跳转","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["/^https?:\\/\\/www\\.google\\..{2,7}url/"],"merge_includes":true,"use_matches":[],"orig_matches":["*://www.jianshu.com/go-wild*","*://link.zhihu.com/*","*://t.cn/*","*://weibo.cn/sinaurl*","*://mail.qq.com/cgi-bin/*","*://c.pc.qq.com/middlem.html*","*://c.pc.qq.com/pc.html*","*://c.pc.qq.com/ios.html*","*://app.yinxiang.com/OutboundRedirect.action*","*://jump.bdimg.com/safecheck/*","*://jump2.bdimg.com/safecheck/*","*://link.csdn.net/*","*://www.youtube.com/redirect*","*://weixin110.qq.com/cgi-bin/mmspamsupport-bin/newredirectconfirmcgi*","*://developers.weixin.qq.com/community/middlepage/href*","*://www.itdaan.com/link/*","*://www.douban.com/link2/*","*://www.360doc.com/content/*","*://www.pixiv.net/jump.php*","*://m.sogou.com/*/tc*","*://m.sogou.com*/tc*","*://www.chinaz.com/go.shtml*","*://www.oschina.net/action/GoToLink*","*://link.juejin.cn/*","*://docs.qq.com/scenario/link.html*","*://www.pc6.com/goread.html*","*://afdian.net/link*","*://gitee.com/link*","*://www.tianyancha.com/security*","*://aiqicha.baidu.com/safetip*","*://www.qcc.com/web/transfer-link*","*://link.uisdc.com/*","*://blog.51cto.com/transfer*","*://leetcode.cn/link*","*://huaban.com/go*","*://security.feishu.cn/link/safety*","*://redirect.epicgames.com/*","*://steamcommunity.com/linkfilter/*","*://*.yuque.com/r/goto*","*://hd.nowcoder.com/link.html*","*://game.bilibili.com/linkfilter/*","*://sspai.com/link*","*://jump.5ch.net/*","*://www.kdocs.cn/office/link*","*://shimo.im/outlink/black*","*://google.urlshare.cn/umirror_url_check*","*://www.coolapk.com/link*","*://wpfx.org/go*","*://cloud.tencent.com/developer/tools/blog-entry*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723588,"data":{}},"enabled":false,"position":5,"file_url":"https://greasyfork.org/scripts/416338-redirect-%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC/code/redirect%20%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC.user.js","uuid":"2b21b442-b681-495c-a264-a86867ba8967","source":""},{"name":"知乎免登录","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://*.zhihu.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["api.zhihu.com"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723588,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/396171-%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95/code/%E7%9F%A5%E4%B9%8E%E5%85%8D%E7%99%BB%E5%BD%95.user.js","uuid":"c7eac0c4-3485-49ba-a7a1-43c79748bdba","source":""},{"name":"anti-redirect","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["*://www.google*"],"merge_includes":true,"use_matches":[],"orig_matches":["*://www.baidu.com/*","*://tieba.baidu.com/*","*://v.baidu.com/*","*://xueshu.baidu.com/*","*://www.google.com/*","*://docs.google.com/*","*://mail.google.com/*","*://play.google.com/*","*://www.youtube.com/*","*://encrypted.google.com/*","*://www.so.com/*","*://www.zhihu.com/*","*://daily.zhihu.com/*","*://zhuanlan.zhihu.com/*","*://weibo.com/*","*://twitter.com/*","*://www.sogou.com/*","*://juejin.im/*","*://juejin.cn/*","*://mail.qq.com/*","*://addons.mozilla.org/*","*://www.jianshu.com/*","*://www.douban.com/*","*://getpocket.com/*","*://www.dogedoge.com/*","*://51.ruyo.net/*","*://steamcommunity.com/*","*://mijisou.com/*","*://blog.csdn.net/*","*://*.blog.csdn.net/*","*://*.oschina.net/*","*://app.yinxiang.com/*","*://www.logonews.cn/*","*://afdian.net/*","*://blog.51cto.com/*","*://xie.infoq.cn/*","*://gitee.com/*","*://sspai.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["www.baidu.com","*"],"merge_connects":true,"use_blockers":["baidu.com","qq.com"],"orig_run_at":"document-start","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723588,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/11915-anti-redirect-typescript/code/anti-redirect.user.js","uuid":"7cbce623-80c9-47b0-81f7-823c54dcbd82","source":""},{"name":"bilibili网页端添加APP首页推荐","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["https://www.mcbbs.net/template/mcbbs/image/special_photo_bg.png?*"],"merge_includes":true,"use_matches":[],"orig_matches":["*://www.bilibili.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["app.bilibili.com","api.bilibili.com","passport.bilibili.com","link.acg.tv","www.mcbbs.net"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723589,"data":{}},"enabled":false,"position":8,"file_url":"https://greasyfork.org/scripts/368446-bilibili%E7%BD%91%E9%A1%B5%E7%AB%AF%E6%B7%BB%E5%8A%A0app%E9%A6%96%E9%A1%B5%E6%8E%A8%E8%8D%90/code/bilibili%E7%BD%91%E9%A1%B5%E7%AB%AF%E6%B7%BB%E5%8A%A0APP%E9%A6%96%E9%A1%B5%E6%8E%A8%E8%8D%90.user.js","uuid":"18aa8b2e-b778-4cb1-bc09-d95195f9ec45","source":""},{"name":"bilibili视频下载","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://www.bilibili.com/video/av*","*://www.bilibili.com/video/BV*","*://www.bilibili.com/list/*","*://www.bilibili.com/bangumi/play/ep*","*://www.bilibili.com/bangumi/play/ss*","*://www.bilibili.com/cheese/play/ep*","*://www.bilibili.com/cheese/play/ss*","https://www.mcbbs.net/template/mcbbs/image/special_photo_bg.png*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null},"user_modified":null},"storage":{"ts":1695782723591,"data":{}},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/413228-bilibili%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/code/bilibili%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD.user.js","uuid":"44498092-3a1b-4e1d-9e91-d5b32bf8fd81","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://static.hdslb.com/js/jquery.min.js","ts":1699930311234,"mimetype":"text/javascript"},"source":""}]},{"name":"V2Next","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://v2ex.com/","https://v2ex.com/?tab=*","https://v2ex.com/t/*","https://v2ex.com/recent*","https://v2ex.com/go/*","https://v2ex.com/member/*","https://v2ex.com/changes*","https://*.v2ex.com/","https://*.v2ex.com/?tab=*","https://*.v2ex.com/t/*","https://*.v2ex.com/recent*","https://*.v2ex.com/go/*","https://*.v2ex.com/member/*","https://*.v2ex.com/changes*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1695782723594,"data":{}},"enabled":true,"position":10,"file_url":"https://update.greasyfork.org/scripts/458024/V2Next.user.js","uuid":"22cfe986-73d9-4d33-96aa-9e40585ec7ae","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery/3.7.1/jquery.min.js","ts":1709275719393,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"vue.global.prod.js","url":"https://cdn.jsdelivr.net/npm/vue@3.4.14/dist/vue.global.prod.js","ts":1709275719081,"mimetype":"text/javascript"},"source":""}]},{"name":"Bilibili CC字幕工具","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["http*://www.bilibili.com/video/*","http*://www.bilibili.com/bangumi/play/ss*","http*://www.bilibili.com/bangumi/play/ep*","http*://www.bilibili.com/list/watchlater*","https://www.bilibili.com/medialist/play/watchlater/*","http*://www.bilibili.com/medialist/play/ml*","http*://www.bilibili.com/blackboard/html5player.html*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1707217236925,"data":{}},"enabled":true,"position":11,"file_url":"https://update.greasyfork.org/scripts/378513/Bilibili%20CC%E5%AD%97%E5%B9%95%E5%B7%A5%E5%85%B7.user.js","uuid":"397794cf-83f7-4492-88c5-a561fc5fe69a","source":""}]}